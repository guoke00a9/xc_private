package javase.basis.静态1;
/**
 * 静态变量存放在方法区内存中
 * 
 * 方法什么时候为静态的？
 * 		方法描述的是动作，当所有的对象执行这个动作的时候，最终产生影响是一样的，那么
 * 		这个动作已经不再属于某一个对象动作了，可以将这个动作升级为类级别的动作，模板级别的动作。
 * 
 * 静态方法中无法直接访问实例变量和实例方法
 * 
 * 带有static的方法，既可以采用类名.方法名访问，也可以采用引用.方法名访问。
 * 但是采用引用.方法名访问与指向对象无关。
 * 
 * 大多数方法都定义为实例方法，一般一个行为或者一个动作在发生的时候，都需要对象的参与。
 * 但也有例外，例如：大多数“工具类”中的方法都是技能太方法，因为工具类就是方便变成，为了
 * 方便方法的调用，自然需要new对象是最好的。
 * 静态代码块在类加载时执行，并且只执行一次
 * 静态代码块在一个类中可以写多个，并且遵循自上而下 
 * 
 * 静态代码块得作用是什么？怎么写？用在哪？什么时候用？
 * 作用：记录日志
 * 语法：
 *		 static｛
 *		 	java语句；
 * 		 ｝
 * 用途：在项目中要求在类加载时刻/时机执行代码完成日志的记录
 * 		 那么这段记录日志的代码就可以编写到静态代码快当中，完成日志记录
 * 		 静态代码块是java为程序员准备一个特殊的时刻，这个特殊的时刻被称为类加载时刻
 * 		 若希望在此刻执行一段特殊的程序，这段程序可以直接放到类加载放到类加载代码块当中
 * 
 * 扩展-------------
 * 实例代码块
 * 语法：｛
 * 				java语句；
 * 		  ｝
 * 创建类执行
 */
