package javase.basis.接口;

/**
 * 接口：
 * 		1、接口也是一种引用数据类型。
 * 		2、接口是完全抽象的。【抽象类是半抽象的】==【接口是特殊的抽象类】
 * 		3、接口语法：
 * 			【修饰符列表】interface 接口名｛
 * 			｝
 * 		4、接口支持多继承：
 * 			一个接口可以继承多个接口
 * 			一个类可以实现多个接口
 * 		5、接口中只包含两部分：
 * 			一、常量
 * 			二、抽象方法
 * 				编写代码的时候抽象修饰符【abstract】可以省略
 * 		6、接口中所有的元素都是public修饰的。
 * 				编写代码的时候公共修饰符【public】可以省略
 * 		7、接口中的方法都是抽象方法，所以接口中的方法不能带有方法体。
 * 		8、接口中的常量修饰符也可以省略
 * 			public static final double PI = 3.1415926；
 * 			double PI = 3.1415926；
 * 		9、接口通常模拟的是行为动作。
 * 
 * ****************************************************************************
 * 		
 * 		接口基础语法：
 * 			1、类和类之间叫继承，类和接口之间叫实现。
 * 			   仍然可以将实现看做“继承”。
 * 			   继承使用extends关键字完成。
 * 			   实现使用implements关键字完成
 * 			2、当一个非抽象的类要实现接口的话，必须将接口中所有的抽象方法全部实现。
 * 			3、接口中的方法都是公共的，实现方法时必须加上public。
 * 			
 * 
 * *****************************************************************************
 * 
 * 		这种机制弥补了java中的哪个缺陷？
 * 			java中的类和类只支持单继承。实际上是为了简单而出现的，现实中存在多继承
 * 			java中的接口弥补了单继承带来的缺陷。
 * 
 * ******************************************************************************
 * 
 * 		接口和接口之间进行强制类型转换的时候，没有继承关系，也可以进行强转。
 * 		但是运行时候可能会出现ClassCastException异常。
 */
